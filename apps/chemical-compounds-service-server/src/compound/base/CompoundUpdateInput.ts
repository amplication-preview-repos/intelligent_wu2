/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsNumber,
  Min,
  Max,
  ValidateNested,
} from "class-validator";
import { PropertyUpdateManyWithoutCompoundsInput } from "./PropertyUpdateManyWithoutCompoundsInput";
import { Type } from "class-transformer";
import { ReferenceUpdateManyWithoutCompoundsInput } from "./ReferenceUpdateManyWithoutCompoundsInput";
import { SynonymUpdateManyWithoutCompoundsInput } from "./SynonymUpdateManyWithoutCompoundsInput";

@InputType()
class CompoundUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  inChI?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  iupacName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  molecularFormula?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  molecularWeight?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => PropertyUpdateManyWithoutCompoundsInput,
  })
  @ValidateNested()
  @Type(() => PropertyUpdateManyWithoutCompoundsInput)
  @IsOptional()
  @Field(() => PropertyUpdateManyWithoutCompoundsInput, {
    nullable: true,
  })
  properties?: PropertyUpdateManyWithoutCompoundsInput;

  @ApiProperty({
    required: false,
    type: () => ReferenceUpdateManyWithoutCompoundsInput,
  })
  @ValidateNested()
  @Type(() => ReferenceUpdateManyWithoutCompoundsInput)
  @IsOptional()
  @Field(() => ReferenceUpdateManyWithoutCompoundsInput, {
    nullable: true,
  })
  references?: ReferenceUpdateManyWithoutCompoundsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  smiles?: string | null;

  @ApiProperty({
    required: false,
    type: () => SynonymUpdateManyWithoutCompoundsInput,
  })
  @ValidateNested()
  @Type(() => SynonymUpdateManyWithoutCompoundsInput)
  @IsOptional()
  @Field(() => SynonymUpdateManyWithoutCompoundsInput, {
    nullable: true,
  })
  synonyms?: SynonymUpdateManyWithoutCompoundsInput;
}

export { CompoundUpdateInput as CompoundUpdateInput };
